// --- –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã ---
const textArea = document.getElementById('inputText');
const countButton = document.getElementById('countButton');
const resultDiv = document.getElementById('result');
const clearButton = document.getElementById('clearButton');
const saveButton = document.getElementById('saveButton');
const savedPoemsList = document.getElementById('savedPoemsList');
const lightRed = document.getElementById('lightRed');
const lightYellow = document.getElementById('lightYellow');
const lightGreen = document.getElementById('lightGreen');
const trafficLightCommentDiv = document.getElementById('trafficLightComment');
const searchWordInput = document.getElementById('searchWordInput');
const searchButtonsContainer = document.querySelector('#dictionaryHelper .search-buttons-container');
const vowels = "–∞–µ—ë–∏–æ—É—ã—ç—é—è";
const initialResultText = "–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç...";



// --- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞ ---
const comments = {
    green: ["–†–∏—Ç–º –∏–¥–µ–∞–ª–µ–Ω! ü§ñ‚ú®", "–ú—É–∑–∞ –æ–¥–æ–±—Ä—è–µ—Ç! üëç", "–í—Å—ë —Ç–æ—á–Ω–æ, –∫–∞–∫ —à–≤–µ–π—Ü–∞—Ä—Å–∫–∏–µ —á–∞—Å—ã! üá®üá≠‚öôÔ∏è"],
    yellow: ["–ï—Å—Ç—å –Ω–µ—Ä–æ–≤–Ω–æ—Å—Ç–∏, –Ω–æ –∂–∏—Ç—å –º–æ–∂–Ω–æ. ü§î", "–†–∏—Ç–º —Å–ª–µ–≥–∫–∞ —Ö—Ä–æ–º–∞–µ—Ç. üò¨", "–°–ª–æ–≥–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏. üöß"],
    red: ["–ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞! üí•", "–í–∞—à —Ä–∏—Ç–º —Ç–æ–ª—å–∫–æ —á—Ç–æ —É–±–∏–ª –∫–æ—Ç—ë–Ω–∫–∞. üòø", "–ü–æ–ª–Ω—ã–π —Ö–∞–æ—Å, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–≤–æ—é –º—É–∑—É. üî•"],
    default: ["–°–≤–µ—Ç–æ—Ñ–æ—Ä –∂–¥—ë—Ç –≤–∞—à–∏—Ö —Ç–≤–æ—Ä–µ–Ω–∏–π... ‚ú®", "–ü–æ–ª–µ –ø—É—Å—Ç–æ, –∫–∞–∫ –¥—É—à–∞ –∫–∏–±–æ—Ä–≥–∞. ü§ñüíî"]
};

const PLACEHOLDERS = {
    textarea: {
        dark: [
            "–¢–≤–æ–∏ –º—Ä–∞—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –∂–¥—É—Ç... ", 
            "–ì–æ—Ç–æ–≤—å—Å—è –∫ —Ä–∏—Ç–º–∏—á–µ—Å–∫–æ–º—É –∞–ø–æ–∫–∞–ª–∏–ø—Å–∏—Å—É...",
            "–°–ª–æ–≤–∞ –¥–æ–ª–∂–Ω—ã –≥–æ—Ä–µ—Ç—å –≤ –∞–¥—É –ø–ª–æ—Ö–æ–≥–æ —Ä–∏—Ç–º–∞...",
            "–°—Ç—Ä–æ–∫–∏-–∑–æ–º–±–∏ –∏—â—É—Ç –º–æ–∑–≥–∏...", 
            "–°–ª–æ–≤–∞ –¥–æ–ª–∂–Ω—ã —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å –Ω–∞ –∫—Ä–∞—é –±–µ–∑–¥–Ω—ã...",
            "–ó–¥–µ—Å—å —Ä–æ–∂–¥–∞—é—Ç—Å—è —Å—Ç–∏—Ö–∏-–æ–±–æ—Ä–æ—Ç–Ω–∏...",
            "–ß–µ—Ä–Ω–∏–ª–∞ –∏–∑ —Å–µ—Ä–¥—Ü–∞ –¥–µ–º–æ–Ω–∞...",
            "–°—Ç—Ä–æ—á–∫–∏, –æ—Ç –∫–æ—Ç–æ—Ä—ã—Ö –¥—Ä–æ–∂–∏—Ç —Ç—å–º–∞..."
        ],
        light: [
            "–ù–∞—á–Ω–∏ –ø–∏—Å–∞—Ç—å —Å–æ–ª–Ω–µ—á–Ω—ã–µ —Å—Ç–∏—Ö–∏...", 
            "–õ–µ–ø–µ—Å—Ç–∫–∏ —Å–ª–æ–≤ –∂–¥—É—Ç —Å–≤–æ–µ–≥–æ —Ü–≤–µ—Ç–∫–∞...",
            "–°—Ç—Ä–æ–∫–∏ –¥–æ–ª–∂–Ω—ã –ø–∞—Ö–Ω—É—Ç—å —Å–≤–µ–∂–µ—Å—Ç—å—é...",
			"–ü–∏—à–∏, –±—É–¥—Ç–æ —Ä–∏—Å—É–µ—à—å —Ä–∞–¥—É–≥—É...Ô∏è",
            "–°–ª–æ–≤–∞-–±–∞–±–æ—á–∫–∏ –∂–¥—É—Ç —Å–≤–æ–µ–≥–æ –ø–æ–ª—ë—Ç–∞...",
            "–°—Ç—Ä–æ–∫–∏ –∏–∑ –æ–±–ª–∞—á–Ω–æ–π –ø—Ä—è–∂–∏...",
            "–†–∏—Ñ–º—ã, –∫–∞–∫ –∫–∞–ø–ª–∏ —Ä–æ—Å—ã...",
            "–°—Ç–∏—Ö–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–±–Ω–∏–º–µ—Ç —Å–æ–ª–Ω—Ü–µ...",
            "–°–ª–æ–≤–∞-–ø—É—à–∏–Ω–∫–∏ –∏–∑ –∫—Ä—ã–ª—å–µ–≤ —Ñ–µ–π...",
            "–ü–∏—à–∏ –º–µ–¥–æ–º, –∞ –Ω–µ –∫—Ä–æ–≤—å—é..."
        ]
    },
    search: {
        dark: [
            "–ò—â–∏ —Å–º—ã—Å–ª –≤–æ —Ç—å–º–µ... Ô∏è", 
            "–ê–Ω–∞–ª–∏–∑ —Å–ª–æ–≤ –≤ —Å—Ç–∏–ª–µ –Ω–æ–∫—Ç—é—Ä–Ω ",
            "–ß—Ç–æ —Å–∫—Ä—ã–≤–∞–µ—Ç —Ç–µ–Ω–µ–≤–∞—è –ª–µ–∫—Å–∏–∫–∞? "
        ],
        light: [
            "–ü–æ–∏—Å–∫ —Å–≤–µ—Ç–ª—ã—Ö —Å–º—ã—Å–ª–æ–≤ ", 
            "–°–ª–æ–≤–æ –∫–∞–∫ –ª—É—á–∏–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è ",
            "–õ–∏–Ω–≥–≤–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –¥–µ—Ç–µ–∫—Ç–∏–≤ "
        ]
    }
};

// --- –ü–æ–¥—Å—á—ë—Ç —Å–ª–æ–≥–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö ---
function countSyllablesInLine(line) {
    const lowerLine = line.toLowerCase();
    let syllableCount = 0;
    for (let char of lowerLine) {
        if (vowels.includes(char)) syllableCount++;
    }
    return syllableCount || (line.trim().length > 0 ? 1 : 0); // –ú–∏–Ω–∏–º—É–º 1 —Å–ª–æ–≥ –¥–ª—è –Ω–µ–ø—É—Å—Ç—ã—Ö —Å—Ç—Ä–æ–∫
}

// --- –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ ---
function processAndDisplayResults() {
    const fullText = textArea.value;
    resetTrafficLightsAndComment();

    if (!fullText.trim()) {
        resultDiv.innerHTML = "–ü–æ–ª–µ –≤–≤–æ–¥–∞ –¥–µ–≤—Å—Ç–≤–µ–Ω–Ω–æ —á–∏—Å—Ç–æ...";
        return;
    }

    const lines = fullText.split('\n');
    let resultsHTML = "";
    const syllableCounts = lines.map(countSyllablesInLine);

    for (let [index, line] of lines.entries()) {
        resultsHTML += `${line} ${syllableCounts[index]}<br>`;
    }

    resultDiv.innerHTML = resultsHTML;
    updateTrafficLight(syllableCounts);
}

// --- –õ–æ–≥–∏–∫–∞ —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞ ---
function updateTrafficLight(syllableCounts) {
    const dominantCount = getDominantSyllableCount(syllableCounts);
    let yellowWarnings = 0, redAlerts = 0;

    for (let count of syllableCounts) {
        const deviation = Math.abs(count - dominantCount);
        if (deviation === 2) yellowWarnings++;
        else if (deviation > 2) redAlerts++;
    }

    if (redAlerts >= 2 || yellowWarnings >= 3) {
        lightRed.classList.add('active');
        trafficLightCommentDiv.textContent = getRandomComment('red');
    } else if (yellowWarnings >= 1) {
        lightYellow.classList.add('active');
        trafficLightCommentDiv.textContent = getRandomComment('yellow');
    } else {
        lightGreen.classList.add('active');
        trafficLightCommentDiv.textContent = getRandomComment('green');
    }
}

// --- –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–º–∏–Ω–∏—Ä—É—é—â–µ–≥–æ —á–∏—Å–ª–∞ —Å–ª–æ–≥–æ–≤ ---
function getDominantSyllableCount(syllableCounts) {
    const counts = new Map();
    let maxCount = 0, dominant = syllableCounts[0];

    for (let count of syllableCounts) {
        counts.set(count, (counts.get(count) || 0) + 1);
        if (counts.get(count) > maxCount) {
            maxCount = counts.get(count);
            dominant = count;
        }
    }
    return dominant;
}

// --- –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª–µ–π ---
function clearFields() {
    textArea.value = "";
    resultDiv.innerHTML = initialResultText;
    resetTrafficLightsAndComment();
}

// --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∏—Ö–æ–≤ ---
function savePoem() {
    const poem = textArea.value.trim();
    if (!poem) {
        alert("–ù–µ—á–µ–≥–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å ‚Äî –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ!");
        return;
    }
    const poems = JSON.parse(localStorage.getItem("savedPoems")) || [];
    poems.unshift(poem);
    localStorage.setItem("savedPoems", JSON.stringify(poems));
    loadSavedPoems();
    alert("–°—Ç–∏—Ö–æ—Ç–≤–æ—Ä–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!");
}

// --- –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö —Å—Ç–∏—Ö–æ–≤ ---
function loadSavedPoems() {
    const poems = JSON.parse(localStorage.getItem("savedPoems")) || [];
    savedPoemsList.innerHTML = "";
    poems.forEach((poem, index) => {
        const li = document.createElement("li");
        li.innerHTML = `<span>${poem.substring(0, 30)}${poem.length > 30 ? "..." : ""}</span>
                        <button onclick="loadPoem(${index})">üìñ</button>
                        <button onclick="deletePoem(${index})">üóëÔ∏è</button>`;
        savedPoemsList.appendChild(li);
    });
}

function loadPoem(index) {
    const poems = JSON.parse(localStorage.getItem("savedPoems")) || [];
    if (poems[index]) textArea.value = poems[index];
}

function deletePoem(index) {
    const poems = JSON.parse(localStorage.getItem("savedPoems")) || [];
    poems.splice(index, 1);
    localStorage.setItem("savedPoems", JSON.stringify(poems));
    loadSavedPoems();
}

// --- –õ–æ–≥–∏–∫–∞ –¥–ª—è –õ–∏–Ω–≥–≤–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –ö–æ–º–±–∞–π–Ω–∞ ---
if (searchButtonsContainer) {
    searchButtonsContainer.addEventListener('click', (event) => {
        if (event.target.classList.contains('search-btn')) {
            const word = searchWordInput.value.trim();
            const searchType = event.target.dataset.searchType;
            if (!word) {
                trafficLightCommentDiv.textContent = "–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞!";
                return;
            }
            let query = "";
            switch (searchType) {
                case "synonyms": query = `—Å–∏–Ω–æ–Ω–∏–º—ã –∫ —Å–ª–æ–≤—É ${word}`; break;
                case "rhymes": query = `—Ä–∏—Ñ–º—ã –∫ —Å–ª–æ–≤—É ${word}`; break;
                case "meaning": query = `–∑–Ω–∞—á–µ–Ω–∏–µ —Å–ª–æ–≤–∞ ${word}`; break;
                case "antonyms": query = `–∞–Ω—Ç–æ–Ω–∏–º—ã –∫ —Å–ª–æ–≤—É ${word}`; break;
                case "etymology": query = `—ç—Ç–∏–º–æ–ª–æ–≥–∏—è —Å–ª–æ–≤–∞ ${word}`; break;
            }
            if (query) window.open(`https://www.google.com/search?q=${encodeURIComponent(query)}`, '_blank');
        }
    });
}

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –ø–æ —Å–≤–µ—Ç–æ—Ñ–æ—Ä—É –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º ---
const trafficLightContainer = document.getElementById('trafficLightContainer');

trafficLightContainer.addEventListener('click', () => {
    const body = document.body;
    const isDarkTheme = body.classList.contains('dark-theme');
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–º—É
    body.classList.toggle('dark-theme');
    body.classList.toggle('light-theme');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    updateTitle(isDarkTheme ? 'light' : 'dark');
    updatePlaceholders(isDarkTheme ? 'light' : 'dark');
    flashLights();
});


// --- –§—É–Ω–∫—Ü–∏—è –º–∏–≥–∞–Ω–∏—è —Å–≤–µ—Ç–æ—Ñ–æ—Ä–∞ ---
function flashLights() {
    // –í–∫–ª—é—á–∞–µ–º –≤—Å–µ –æ–≥–æ–Ω—å–∫–∏
    lightRed.classList.add('active');
    lightYellow.classList.add('active');
    lightGreen.classList.add('active');

    // –ß–µ—Ä–µ–∑ 500 –º—Å –≤—ã–∫–ª—é—á–∞–µ–º –∏—Ö
    setTimeout(() => {
        lightRed.classList.remove('active');
        lightYellow.classList.remove('active');
        lightGreen.classList.remove('active');
    }, 500); // 500 –º—Å
}

// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ flashLights()
function updatePlaceholders(themeType) {
    textArea.placeholder = PLACEHOLDERS.textarea[themeType][Math.floor(Math.random() * 3)];
    searchWordInput.placeholder = PLACEHOLDERS.search[themeType][Math.floor(Math.random() * 3)];
}

// --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---
function resetTrafficLightsAndComment() {
    lightRed.classList.remove('active');
    lightYellow.classList.remove('active');
    lightGreen.classList.remove('active');
    trafficLightCommentDiv.textContent = getRandomComment('default');
}

function getRandomComment(type) {
    const typeComments = comments[type] || comments.default;
    return typeComments[Math.floor(Math.random() * typeComments.length)];
}




// --- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ ---
const dynamicTitles = {
    
	dark: ["–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä –°–≤–æ–±–æ–¥–Ω–æ–≥–æ –°—Ç–∏—Ö–∞ ü§ñüî´", "–£–∫—Ä–æ—Ç–∏—Ç–µ–ª—å –°–ª–æ–≥–æ–≤ üòà", "BDSM –°–≤–µ—Ç–æ—Ñ–æ—Ä—á–∏–∫ü¶Ø", "–ó–ª–æ–π –°–≤–µ—Ç–æ—Ñ–æ—Ä—á–∏–∫üö¶üòà", "–ö–∞–º–µ—Ä—Ç–æ–Ω –°–µ—Ä–¥–∏—Ç–æ–π –ú—É–∑—ã üò°üéµ", "–í–∞—à –õ–∏—á–Ω—ã–π –°–ª–æ–≥–æ-–°–æ–º–µ–ª—å–µ üç∑", "–°–ª–æ–≥–æ–≤–æ–π –°–∫–∞–Ω–µ—Ä '–û–∫–æ –ü–æ—ç—Ç–∞' üëÅÔ∏è", "–°–ª–æ–≥–æ-–ú—è—Å–æ—Ä—É–±–∫–∞ ‚öôÔ∏èü•©",
    "–í–µ—Ä–¥–∏–∫—Ç –†–∏—Ç–º–∞: –ë–µ–∑ –ê–ø–µ–ª–ª—è—Ü–∏–π! ‚öñÔ∏èüí•", "–ü–æ—ç—Ç–∏—á–µ—Å–∫–∏–π –ü–æ–ª–∏–≥—Ä–∞—Ñ‚Ñ¢ ü§•", "–°–≤–µ—Ç–æ—Ñ–æ—Ä –°—É–¥–Ω–æ–≥–æ –î–Ω—è (–¥–ª—è –°—Ç–∏—Ö–æ–≤)", "–≠–∫–∑–µ–∫—É—Ç–æ—Ä –ì–∞—Ä–º–æ–Ω–∏–∏ üíÄüéº", "–î–∏—Å–ø–µ—Ç—á–µ—Ä –°–ª–æ–≥–æ–≤—ã—Ö –ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ üö®", "–†–∏—Ç–º–∏—á–µ—Å–∫–∏–π –î–µ—Ñ–∏–±—Ä–∏–ª–ª—è—Ç–æ—Ä ‚ö°üíî", "–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä '–ß—ë—Ä–Ω–∞—è –ú–µ—Ç–∫–∞' üè¥‚Äç‚ò†Ô∏èüìú",
    "–°—á—ë—Ç—á–∏–∫ –ì—Ä–µ—Ö–æ–≤... —Ç–æ –µ—Å—Ç—å, –°–ª–æ–≥–æ–≤ üé∞", "–ú–∞—à–∏–Ω–∞ –ë–æ–ª–∏ –¥–ª—è –ü–ª–æ—Ö–∏—Ö –°—Ç–∏—Ö–æ–≤ üò©", "–ö–∏–±–µ—Ä-–¶–µ–Ω–∑–æ—Ä –†–∏—Ñ–º—ã ü§ñüö´", "–ù–µ–π—Ä–æ-–ò–Ω–∫–≤–∏–∑–∏—Ç–æ—Ä –ü–æ—ç–∑–∏–∏ üî•", "–°–ª–æ–≥–æ-–î–µ—Ç–µ–∫—Ç–æ—Ä –õ–∂–∏ üïµÔ∏è‚Äç"],
    
	light: ["‚ö™ –î–æ–±—Ä—ã–π –°–≤–µ—Ç–æ—Ñ–æ—Ä—á–∏–∫", "üåû –°—Ç–∏—Ö–æ—Ç–≤–æ—Ä–Ω—ã–π –†–∞—Å—Å–≤–µ—Ç", "üåû –°—Ç–∏—Ö–æ—Ç–≤–æ—Ä–Ω—ã–π –°–∞–¥–æ–≤–Ω–∏–∫", "ü¶ã –ú—É–∑–∞ –≤ –ü–æ–ª–µ—Ç–µ", "üåà –í–æ–ª—à–µ–±–Ω—ã–π –°–ª–æ–≥–æ-–î–∏—Ä–∏–∂—ë—Ä", "üçÉ –°–ª–æ–≥–æ–≤–æ–π –í–µ—Ç–µ—Ä–æ–∫",
    "üßö‚ôÇÔ∏è –§–µ—è –ì–∞—Ä–º–æ–Ω–∏–∏", "üìö –ü–æ—ç—Ç–∏—á–µ—Å–∫–∏–π –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞—Ä—å", "üéà –í–æ–∑–¥—É—à–Ω—ã–π –†–∏—Ñ–º–æ–ø–ª—ë—Ç", "üåª –°–æ–ª–Ω–µ—á–Ω—ã–π –°—á—ë—Ç—á–∏–∫", "üïäÔ∏è –ì–æ–ª—É–±—å –ú–∏—Ä–∞ (–¥–ª—è –°—Ç–∏—Ö–æ–≤)", "üé† –ö–∞—Ä—É—Å–µ–ª—å –°–ª–æ–≥–æ–≤", "üêá –ü–æ—ç—Ç–∏—á–µ—Å–∫–∏–π –ö—Ä–æ–ª–∏–∫", "üßÅ –°–ª–æ–≥–æ-–ü–µ–∫–∞—Ä—å", "ü§ñ –†–æ–±–æ—Ç-–ù—è–Ω—è (–¥–ª—è –°—Ç–∏—Ö–æ–≤)"],
    
	base: [ "–ù–µ–π—Ä–æ–°–ª–æ–≥–æ–ú–µ—Ç—Ä ü§ñ", "–°–ª–æ–≥–æ-–ú–∞–≥–∏—è ‚ú®", "–≠—Ç–æ –ù–ï –ø—Ä–æ—Å—Ç–æ –°—á—ë—Ç—á–∏–∫ –°–ª–æ–≥–æ–≤ üòâ", "–°–∏–ª–ª–∞–±–æ-–ö–≤–∞–Ω—Ç–æ–≤—ã–π –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä v0.3 ‚öõÔ∏è", "–°–õ–û–ì–æ–≤–æ—Ä–æ—Ç –°–æ–±—ã—Ç–∏–π –≤ –°—Ç–∏—Ö–µ! üå™Ô∏è", "–ú–∞—Å—Ç–µ—Ä—Å–∫–∞—è –†–∏—Ç–º–∞ üõ†Ô∏è", "–ù–µ –°—á–∏—Ç–∞–π –í–æ—Ä–æ–Ω ‚Äì –°—á–∏—Ç–∞–π –°–ª–æ–≥–∏! üëÄ", "–î–æ–∫—Ç–æ—Ä –°–ª–æ–≥: –ü—Ä–∏—ë–º –ø–æ –ó–∞–ø–∏—Å–∏! ü©∫"]
};



function updateTitle(themeType) {
    const titleElement = document.getElementById('mainPageTitle');
    const titles = themeType ? 
        dynamicTitles[themeType] : 
        dynamicTitles.base;
    
    // –ü–ª–∞–≤–Ω–æ–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ
    titleElement.style.opacity = 0;
    
    setTimeout(() => {
        // –í—ã–±–æ—Ä —Å–ª—É—á–∞–π–Ω–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è
        const newTitle = titles[Math.floor(Math.random() * titles.length)];
        titleElement.textContent = newTitle;
        
        // –ü–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ
        titleElement.style.opacity = 1;
        titleElement.style.transform = 'translateY(0px)';
        setTimeout(() => {
            titleElement.style.transform = 'translateY(0)';
        }, 1);
    }, 50);
}




// –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–µ–º—ã
document.body.addEventListener('click', (e) => {
    if (e.target.closest('#trafficLightContainer')) {
        const isDarkTheme = document.body.classList.contains('dark-theme');
        updateTitle(isDarkTheme ? 'dark' : 'light');
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', () => {
    updateTitle('base');
    // ... –æ—Å—Ç–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
});

// --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
document.addEventListener('DOMContentLoaded', () => {
	const pageTitle = document.title;
    document.getElementById('mainPageTitle').textContent = pageTitle;
    loadSavedPoems();
    resetTrafficLightsAndComment();
    const initialTheme = document.body.classList.contains('dark-theme') ? 'dark' : 'light';
    updatePlaceholders(initialTheme);
    // ... –æ—Å—Ç–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
});

// --- –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π ---
if (countButton) countButton.addEventListener('click', processAndDisplayResults);
if (clearButton) clearButton.addEventListener('click', clearFields);
if (saveButton) saveButton.addEventListener('click', savePoem);


